//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EveShopping.Modelo
{
    #pragma warning disable 1573
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Data.Entity.ModelConfiguration;
    using System.Data.Entity.Infrastructure;
    
    internal partial class eshFitting_Mapping : EntityTypeConfiguration<eshFitting>
    {
        public eshFitting_Mapping()
        {                        
              this.HasKey(t => t.fittingID);        
              this.ToTable("eshFittings");
              this.Property(t => t.fittingID).HasColumnName("fittingID");
              this.Property(t => t.name).HasColumnName("name").HasMaxLength(100);
              this.Property(t => t.shipTypeID).HasColumnName("shipTypeID");
              this.Property(t => t.description).HasColumnName("description").HasMaxLength(3000);
              this.Property(t => t.dateCreation).HasColumnName("dateCreation");
              this.Property(t => t.shipVolume).HasColumnName("shipVolume");
              this.Property(t => t.volume).HasColumnName("volume");
              this.Property(t => t.userID).HasColumnName("userID");
              this.Property(t => t.urlID).HasColumnName("urlID");
              this.Property(t => t.publicID).HasColumnName("publicID").IsRequired().HasMaxLength(50);
              this.HasOptional(t => t.eshTinyUrlMapping).WithMany(t => t.eshFittings).HasForeignKey(d => d.urlID);
              this.HasOptional(t => t.invType).WithMany(t => t.eshFittings).HasForeignKey(d => d.shipTypeID);
              this.HasOptional(t => t.UserProfile).WithMany(t => t.eshFittings).HasForeignKey(d => d.userID);
         }
    }
}
